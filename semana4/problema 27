class UnitConverter:
    @staticmethod
    def convert_length(value, from_unit, to_unit):
        length_units = {
            "m": 1,          # metros
            "km": 1000,      # kilómetros
            "cm": 0.01,      # centímetros
            "mm": 0.001,     # milímetros
            "in": 0.0254,    # pulgadas
            "ft": 0.3048     # pies
        }

        if from_unit not in length_units or to_unit not in length_units:
            raise ValueError("Unidades de longitud no válidas.")
        
        # Convertir el valor a metros
        value_in_meters = value * length_units[from_unit]
        # Convertir de metros a la unidad destino
        return value_in_meters / length_units[to_unit]

    @staticmethod
    def convert_mass(value, from_unit, to_unit):
        mass_units = {
            "kg": 1,         # kilogramos
            "g": 0.001,      # gramos
            "mg": 1e-6,      # miligramos
            "lb": 0.453592,  # libras
            "oz": 0.0283495  # onzas
        }

        if from_unit not in mass_units or to_unit not in mass_units:
            raise ValueError("Unidades de masa no válidas.")
        
        # Convertir el valor a kilogramos
        value_in_kg = value * mass_units[from_unit]
        # Convertir de kilogramos a la unidad destino
        return value_in_kg / mass_units[to_unit]

    @staticmethod
    def convert_temperature(value, from_unit, to_unit):
        if from_unit == to_unit:
            return value
        
        if from_unit == "C" and to_unit == "F":
            return (value * 9/5) + 32
        elif from_unit == "F" and to_unit == "C":
            return (value - 32) * 5/9
        elif from_unit == "C" and to_unit == "K":
            return value + 273.15
        elif from_unit == "K" and to_unit == "C":
            return value - 273.15
        elif from_unit == "F" and to_unit == "K":
            return (value - 32) * 5/9 + 273.15
        elif from_unit == "K" and to_unit == "F":
            return (value - 273.15) * 9/5 + 32
        else:
            raise ValueError("Unidades de temperatura no válidas.")

def main():
    print("Conversor de Unidades")
    while True:
        print("\nOpciones:")
        print("1. Convertir Longitud")
        print("2. Convertir Masa")
        print("3. Convertir Temperatura")
        print("4. Salir")
        
        choice = input("Elige una opción (1-4): ")

        if choice == "1":
            value = float(input("Introduce el valor a convertir: "))
            from_unit = input("Introduce la unidad de origen (m, km, cm, mm, in, ft): ")
            to_unit = input("Introduce la unidad de destino (m, km, cm, mm, in, ft): ")
            try:
                result = UnitConverter.convert_length(value, from_unit, to_unit)
                print(f"{value} {from_unit} son {result} {to_unit}")
            except ValueError as e:
                print(e)

        elif choice == "2":
            value = float(input("Introduce el valor a convertir: "))
            from_unit = input("Introduce la unidad de origen (kg, g, mg, lb, oz): ")
            to_unit = input("Introduce la unidad de destino (kg, g, mg, lb, oz): ")
            try:
                result = UnitConverter.convert_mass(value, from_unit, to_unit)
                print(f"{value} {from_unit} son {result} {to_unit}")
            except ValueError as e:
                print(e)

        elif choice == "3":
            value = float(input("Introduce el valor a convertir: "))
            from_unit = input("Introduce la unidad de origen (C, F, K): ")
            to_unit = input("Introduce la unidad de destino (C, F, K): ")
            try:
                result = UnitConverter.convert_temperature(value, from_unit, to_unit)
                print(f"{value} {from_unit} son {result} {to_unit}")
            except ValueError as e:
                print(e)

        elif choice == "4":
            print("Saliendo del conversor.")
            break

        else:
            print("Opción no válida. Intenta de nuevo.")

if __name__ == "__main__":
    main()
